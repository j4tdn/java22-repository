OOP

1. Tính chất đóng gói(encapsulation)
Định nghĩa: Tính chất đóng gói được thể hiện qua các access modifier (từ khóa khai báo phạm vi truy cập)

Khai báo access modifier ở: attribute(thuộc tính), method(phương thức)

Nếu access modifier là

+ private: đóng gói trong phạm vi của class
	--> attribute, method là private thì chỉ được phép sử dụng trong class chứa nó
	

+ protected/no-declare: đóng gói trong phạm vi package
	--> attribute, method là protected/no-declare thì được phép sử dụng trong class hiện tại và các class khác nhưng phải cùng package với class hiện tại
	
	. protected:
	
	. no-declare:
	
+ public: dùng ở mọi nơi [trong dự án] 

2. Tính chất đa hình (polymorphism)
Định nghĩa: Tính chất đa hình có 2 loại: Đa hình trong phương thức và đa hình trong đối tượng

Một phương thức, đối tượng có Thời điểm thời gian này nó là hình thái này
							  Thời điểm, thời gian khác nó là hình thái chức năng khác
Đối tượng, phương thức như vậy gọi là đối tượng, phương thức có tính đa hình

2.1. Đa hình trong phương thức
+ Overloading
  --> 2 hoặc nhiều phương thức được gọi là overloading nếu
  . Thuộc cùng 1 class
  . Cùng tên
  . Số lượng tham số khác nhau hoặc KDL truyền vào tham số khác nhau
  
+ Overriding
  --> 2 phương thức được gọi là Overriding nếu 
  . Thuộc 2 class cha con
  . Hàm override là hàm nằm trong class con
    override, định nghĩa lại nội dung của hàm cha
    
    --> Thường sẽ có kí hiệu (annotation @Override) để biết hàm đó là hàm
    được override từ hàm có sẵn của cha 
    --> Override chỉ cho phép override method không có khái niệm override thuộc tính (attribute)
 2.2 Đa hình trong đối tượng(liên quan đến tính thừa kế)
 Hình vẽ có thể là hình vuông, tròn, tam giác phụ thuộc vào 1 số thuộc tính của nó
 
 Shape		: paint, calcS
 Square		: setBackground
 Rectangle	:
 
 2.3. Tính chất thừa kế (Inheritance)
 Định nghĩa: Khi nào các class(KDL) có chung thuộc tính/phương thức mình sẽ
 tạo ra 1 KDL cha(class/interface/abstract class) chung để chứa các thuộc tính/phương thức
 chung đó để
 + Tăng khả năng reuse/clean code
 
 Thừa kế: thuộc tính, phương thức
 Override: phương thức	